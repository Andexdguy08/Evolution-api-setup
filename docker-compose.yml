services:
  api:
    container_name: evolution_api
    image: atendai/evolution-api-lite:latest
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net
    environment:
      # Server Configuration
      SERVER_TYPE: http
      SERVER_PORT: 8080
      
      # Authentication
      AUTHENTICATION_API_KEY: "WTRj!XH!.*e2WqEbuugnbq4J*c!Evp_C9DQ4xpKZ@FN8tdyg.."
      
      # Database
      DATABASE_PROVIDER: postgresql
      DATABASE_CONNECTION_URI: "postgresql://evolution:evolution_password@postgres:5432/evolution?schema=public"
      DATABASE_CONNECTION_CLIENT_NAME: "evolution_exchange"
      
      # Redis Cache
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: "redis://redis:6379"
      CACHE_REDIS_PREFIX_KEY: "evolution_api"
      
      # Basic Settings
      LOG_LEVEL: "ERROR,WARN,DEBUG,INFO,LOG,VERBOSE"
      LOG_COLOR: "true"
      LOG_BAILEYS: "error"
      
      # Instance Settings
      DEL_INSTANCE: "false"
      
      # Disable unused features
      S3_ENABLED: "false"
      WEBHOOK_GLOBAL_ENABLED: "false"
      
    expose:
      - 8080

  redis:
    image: redis:latest
    networks:
      - evolution-net
    container_name: redis
    command: >
      redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - 6379:6379

  postgres:
    container_name: postgres
    image: postgres:15
    networks:
      - evolution-net
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: evolution_password
      POSTGRES_USER: evolution
      POSTGRES_DB: evolution
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432

networks:
  evolution-net:
    name: evolution-net
    driver: bridge

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:
